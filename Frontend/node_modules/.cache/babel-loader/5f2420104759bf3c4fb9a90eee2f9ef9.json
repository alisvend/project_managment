{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/Replies.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\nexport default class Replies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      issueID: null,\n      replies: []\n    };\n  }\n\n  fetchReplies(id) {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.post('/api/getReplies', {\n        id: id\n      }).then(response => {\n        const replies = response.data;\n        this.setState({\n          replies: replies\n        });\n      }).catch(error => console.error(error));\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      issueID: this.props.id\n    });\n    this.fetchReplies(this.state.issueID);\n    console.log(this.props.id);\n  }\n\n  render() {\n    console.log(this.props, \"props\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"    \", this.state.replies.map(replies => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: replies.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: replies.reply\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 105\n          }, this)]\n        }, replies.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 54\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/Replies.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NewTask","NewIssue","Replies","Component","constructor","props","state","issueID","replies","fetchReplies","id","sessionStorage","getItem","post","then","response","data","setState","catch","error","console","componentDidMount","log","render","map","user","name","reply"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,IADC;AAEVC,MAAAA,OAAO,EAAC;AAFE,KAAb;AAIH;;AACDC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,QAAIC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAJ,EAAwC;AACnCjB,MAAAA,SAAS,CAACkB,IAAV,CAAe,iBAAf,EAAiC;AAACH,QAAAA,EAAE,EAACA;AAAJ,OAAjC,EACII,IADJ,CACSC,QAAQ,IAAI;AACd,cAAMP,OAAO,GAAGO,QAAQ,CAACC,IAAzB;AACA,aAAKC,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEA;AAAX,SAAd;AAEH,OALJ,EAMIU,KANJ,CAMUC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CANnB;AASJ;AACJ;;AAELE,EAAAA,iBAAiB,GAAE;AACf,SAAKJ,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAC,KAAKF,KAAL,CAAWK;AAApB,KAAd;AACA,SAAKD,YAAL,CAAkB,KAAKH,KAAL,CAAWC,OAA7B;AACAa,IAAAA,OAAO,CAACE,GAAR,CAAY,KAAKjB,KAAL,CAAWK,EAAvB;AACH;;AACDa,EAAAA,MAAM,GAAE;AACRH,IAAAA,OAAO,CAACE,GAAR,CAAY,KAAKjB,KAAjB,EAAuB,OAAvB;AACA,wBAGA;AAAA,yBAAU,KAAKC,KAAL,CAAWE,OAAX,CAAmBgB,GAAnB,CAAwBhB,OAAD,IAAW;AAAC,4BAAQ;AAAA,uCAAuB;AAAA,sBAAKA,OAAO,CAACiB,IAAR,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAAvB,eAAmD;AAAA,sBAAIlB,OAAO,CAACmB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAnD;AAAA,WAAUnB,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAR;AAA0F,OAA7H,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAWC;;AAxCoD","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\n\nexport default class Replies extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issueID:null,\n           replies:[]\n        };\n    }\n    fetchReplies(id) {\n        if (sessionStorage.getItem('loggedIn')) {\n             apiClient.post('/api/getReplies',{id:id})\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                )\n\n        }\n    }\n    \ncomponentDidMount(){\n    this.setState({issueID:this.props.id})\n    this.fetchReplies(this.state.issueID);\n    console.log(this.props.id);\n}\nrender(){\nconsole.log(this.props,\"props\");\nreturn(\n\n\n<div>    {this.state.replies.map((replies)=>{return (<div key={replies.id}> <h3>{replies.user.name}</h3><p>{replies.reply}</p></div>);})}</div>\n\n\n)\n\n\n\n\n}\n\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}