{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/IssueDetails.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Redirect, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nexport default class IssueDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteIssue = id => {\n      confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this issue?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/deleteIssue', {\n              issue_id: id\n            }));\n            this.props.history.push('/adminView');\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    this.deleteReply = id => {\n      confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this reply?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/deleteReply', {\n              reply_id: id\n            }));\n            this.fetchReplies();\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    this.fetchAddReply = () => {\n      this.fetchReplies();\n    };\n\n    this.state = {\n      issues: [],\n      replies: []\n    };\n  }\n\n  fetchIssues() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', {\n        id: this.props.id\n      }).then(response => {\n        const issues = response.data;\n        this.setState({\n          issues: issues\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  fetchReplies() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', {\n        id: this.props.id\n      }).then(response => {\n        const replies = response.data;\n        this.setState({\n          replies: replies\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n    this.fetchReplies();\n  }\n\n  render() {\n    console.log(this.state.issues, \"anything\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/adminView\",\n        children: \"Back To Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), this.state.issues.map(issues => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: issues.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.deleteIssue(issues.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: issues.issue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(NewReply, {\n                onAddReply: this.fetchAddReply,\n                id: issues.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this), this.state.replies.map(replies => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: replies.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 60\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: replies.reply\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 88\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.deleteReply(replies.id);\n                    },\n                    children: \"Delete Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 110\n                  }, this)]\n                }, replies.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/IssueDetails.js"],"names":["React","apiClient","BrowserRouter","Router","Redirect","Route","Link","NavLink","NewReply","NewIssue","Replies","confirmAlert","IssueDetails","Component","constructor","props","deleteIssue","id","title","message","buttons","label","onClick","get","then","post","issue_id","history","push","deleteReply","reply_id","fetchReplies","fetchAddReply","state","issues","replies","fetchIssues","sessionStorage","getItem","response","data","setState","catch","error","console","componentDidMount","render","log","map","issue","user","name","reply"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Redirect, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\n\nexport default class IssueDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            replies: [],\n        };\n    }\n\n    fetchIssues() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', { id: this.props.id })\n                .then(response => {\n                    const issues = response.data;\n                    this.setState({ issues: issues });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    fetchReplies() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', { id: this.props.id })\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.fetchIssues();\n        this.fetchReplies();\n    }\n    deleteIssue = (id) => {\n\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this issue?',\n            buttons: [\n                {\n                    label: 'Yes', onClick: () => {\n                        apiClient.get('sanctum/csrf-cookie')\n                        .then(() => apiClient.post('/api/deleteIssue', { issue_id: id }));\n\n                        this.props.history.push('/adminView')\n                    }\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        })\n    }\n\n    deleteReply = (id) => {\n\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this reply?',\n            buttons: [\n                {\n                    label: 'Yes', onClick: () => {\n                        apiClient.get('sanctum/csrf-cookie')\n                        .then(() => apiClient.post('/api/deleteReply', { reply_id: id }));\n                        this.fetchReplies();\n\n                    }\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        })\n    }\n\n    fetchAddReply=()=>{\n\n        this.fetchReplies();\n    }\n\n\n\n    render() {\n        console.log(this.state.issues, \"anything\");\n        return (<>\n            <NavLink to=\"/adminView\">Back To Home</NavLink>\n\n            {this.state.issues.map((issues) => {\n                return (\n                    <>\n                        <div><h3>{issues.title}</h3></div>\n                        <div> <div className=\"shadow\" >\n                            <button onClick={() => { this.deleteIssue(issues.id) }}>Delete</button>\n                            {/* <div><h3>{this.state.issues.user.name}:</h3></div> */}\n\n                            <div><p>{issues.issue}</p></div>\n                            <NewReply onAddReply={this.fetchAddReply} id={issues.id} />\n                            {this.state.replies.map((replies) => {\n                                return (\n                                    <div key={replies.id}> <h3>{replies.user.name}</h3><p>{replies.reply}</p><button onClick={() => { this.deleteReply(replies.id) }}>Delete Reply</button></div>)\n                            })}</div>\n                        </div></>)\n            })}\n\n        </>\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}