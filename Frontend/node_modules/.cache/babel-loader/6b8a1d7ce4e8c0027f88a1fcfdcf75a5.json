{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/project_managment/Frontend/src/components/Issue.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nexport default class Issue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddIssue = () => {\n      this.fetchIssues();\n    };\n\n    this.getmereplies = e => {\n      e.preventDefault();\n      this.setState({\n        issueID: e.target.id\n      });\n      console.log(e.target.id);\n    };\n\n    this.state = {\n      issues: [],\n      replies: [],\n      issueID: null\n    };\n  }\n\n  fetchIssues() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/issues').then(response => {\n        const issues = response.data;\n        this.setState({\n          issues: issues\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n  }\n\n  render() {\n    console.log(this.state.replies, \"replies\");\n    let formatter = new Intl.DateTimeFormat(\"en-GB\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"2-digit\"\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NewIssue, {\n          onAddIssue: this.handleAddIssue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"row\",\n        children: this.state.issues.map(issues => {\n          let reply = 0;\n\n          if (this.state.issueID == issues.id) {\n            reply = issues.id;\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"issue-style card body border-bottom-primary shadow  h-100 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header py-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [issues.title, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                },\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formatter.format(Date.parse(issues.created_at))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 75\n                }, this), \" By \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: issues.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 135\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: issues.issue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: `/ShowIssue`,\n                state: {\n                  id: issues.id\n                }\n              },\n              children: \" Show Issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Replies, {\n              id: reply\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/user/project_managment/Frontend/src/components/Issue.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NewTask","NewIssue","Replies","Issue","Component","constructor","props","handleAddIssue","fetchIssues","getmereplies","e","preventDefault","setState","issueID","target","id","console","log","state","issues","replies","sessionStorage","getItem","get","then","response","data","catch","error","componentDidMount","render","formatter","Intl","DateTimeFormat","year","month","day","map","reply","title","display","flexDirection","format","Date","parse","created_at","user","name","issue","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,eAAe,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,cAxBmB,GAwBJ,MAAI;AAEf,WAAKC,WAAL;AACH,KA3BkB;;AAAA,SAoCnBC,YApCmB,GAoCLC,CAAD,IAAK;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAACH,CAAC,CAACI,MAAF,CAASC;AADP,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACI,MAAF,CAASC,EAArB;AACH,KA3CkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,OAAO,EAAC,EAFC;AAGTP,MAAAA,OAAO,EAAC;AAHC,KAAb;AAKH;;AAGDL,EAAAA,WAAW,GAAG;AACV,QAAIa,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAJ,EAAwC;AACpC3B,MAAAA,SAAS,CAAC4B,GAAV,CAAc,qBAAd,EAAqCC,IAArC,CAA0C,MAAM7B,SAAS,CAAC4B,GAAV,CAAc,aAAd,EAC3CC,IAD2C,CACtCC,QAAQ,IAAI;AACd,cAAMN,MAAM,GAAGM,QAAQ,CAACC,IAAxB;AACA,aAAKd,QAAL,CAAc;AAAEO,UAAAA,MAAM,EAAEA;AAAV,SAAd;AAEH,OAL2C,EAM3CQ,KAN2C,CAMrCC,KAAK,IAAIZ,OAAO,CAACY,KAAR,CAAcA,KAAd,CAN4B,CAAhD;AASH;AACJ;;AASDC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKrB,WAAL;AAEH;;AAUDsB,EAAAA,MAAM,GAAG;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,OAAvB,EAA+B,SAA/B;AACA,QAAIW,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC7CC,MAAAA,IAAI,EAAE,SADuC;AAE7CC,MAAAA,KAAK,EAAE,MAFsC;AAG7CC,MAAAA,GAAG,EAAE;AAHwC,KAAjC,CAAhB;AAKA,wBAAQ;AAAA,8BAEJ;AAAA,+BAAK,QAAC,QAAD;AAAU,UAAA,UAAU,EAAE,KAAK7B;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAK,QAAA,UAAU,EAAC,KAAhB;AAAA,kBAEK,KAAKW,KAAL,CAAWC,MAAX,CAAkBkB,GAAlB,CAAuBlB,MAAD,IAAY;AAC/B,cAAImB,KAAK,GAAC,CAAV;;AACA,cAAG,KAAKpB,KAAL,CAAWL,OAAX,IAAoBM,MAAM,CAACJ,EAA9B,EAAiC;AAACuB,YAAAA,KAAK,GAACnB,MAAM,CAACJ,EAAb;AAAgB;;AAElD,8BAAQ;AAAK,YAAA,SAAS,EAAC,gEAAf;AAAA,oCACL;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACH;AAAA,uCAAK;AAAA,6BAAKI,MAAM,CAACoB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,sBADG,eAEH;AAAK,gBAAA,KAAK,EAAE;AAACC,kBAAAA,OAAO,EAAC,MAAT;AAAgBC,kBAAAA,aAAa,EAAC;AAA9B,iBAAZ;AAAA,6CAAsD;AAAA,4BAAIV,SAAS,CAACW,MAAV,CAAiBC,IAAI,CAACC,KAAL,CAAWzB,MAAM,CAAC0B,UAAlB,CAAjB;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAAtD,uBAAkH;AAAA,4BAAI1B,MAAM,CAAC2B,IAAP,CAAYC;AAAhB;AAAA;AAAA;AAAA;AAAA,wBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,eAKL;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACC;AAAA,0BAAI5B,MAAM,CAAC6B;AAAX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBALK,eAQL,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AAAEC,gBAAAA,QAAQ,EAAG,YAAb;AAA0B/B,gBAAAA,KAAK,EAAE;AAAEH,kBAAAA,EAAE,EAAEI,MAAM,CAACJ;AAAb;AAAjC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARK,eAWL,QAAC,OAAD;AAAS,cAAA,EAAE,EAAEuB;AAAb;AAAA;AAAA;AAAA;AAAA,oBAXK;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AAeH,SAnBA;AAFL;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA,oBAAR;AA8BH;;AAnF8C","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nexport default class Issue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            replies:[],\n            issueID:null\n        };\n    }\n\n\n    fetchIssues() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/issues')\n                .then(response => {\n                    const issues = response.data;\n                    this.setState({ issues: issues });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    handleAddIssue=()=>{\n\n        this.fetchIssues();\n    }\n\n   \n\n    componentDidMount() {\n\n        this.fetchIssues();\n       \n    }\n    getmereplies=(e)=>{\n        e.preventDefault();\n        this.setState({\n            issueID:e.target.id\n        })\n      \n        console.log(e.target.id)\n    }\n\n    render() {\n        console.log(this.state.replies,\"replies\");\n        let formatter = new Intl.DateTimeFormat(\"en-GB\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"2-digit\"\n          });\n        return (<>\n\n            <div><NewIssue onAddIssue={this.handleAddIssue} /></div>\n            <div classsName=\"row\">\n\n                {this.state.issues.map((issues) => {\n                    let reply=0;\n                    if(this.state.issueID==issues.id){reply=issues.id}\n                    \n                    return (<div className=\"issue-style card body border-bottom-primary shadow  h-100 py-2\" >\n                       <div className=\"card-header py-3\">\n                    <div><h3>{issues.title}:</h3></div>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}> <p>{formatter.format(Date.parse(issues.created_at))}</p> By <p>{issues.user.name}</p></div>\n                       </div>\n                       <div className=\"card-body\">\n                        <p>{issues.issue}</p>\n                        </div>\n                       <Link to={{ pathname: `/ShowIssue`, state: { id: issues.id } }}> Show Issue</Link>\n                       \n                       {/* <div>{issues.reply.map((replies)=>{return(<><div>{replies.user_reply.name}</div><div>{replies.reply}</div></>);})}</div> */}\n                       <Replies id={reply}/>\n                 </div>  );\n\n                 \n                })}\n\n            </div>\n        </>\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}