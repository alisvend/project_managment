{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/Issue.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nexport default class Issue extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getmereplies = e => {\n      // e.preventDefault();\n      // this.setState({\n      //     issueID:e.target.id\n      // })\n      if (sessionStorage.getItem('loggedIn')) {\n        apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', {\n          id: e.target.id\n        }).then(response => {\n          const replies = response.data;\n          this.setState({\n            replies: replies\n          });\n        }).catch(error => console.error(error)));\n      }\n\n      console.log(e.target.id);\n    };\n\n    this.state = {\n      issues: [],\n      replies: [],\n      issueID: null\n    };\n  }\n\n  fetchIssues() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/issues').then(response => {\n        const issues = response.data;\n        this.setState({\n          issues: issues\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n  }\n\n  render() {\n    console.log(this.state.replies, \"replies\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NewIssue, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"row\",\n        children: this.state.issues.map(issues => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [issues.user.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: issues.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: issues.issue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: issues.id,\n              onClick: this.getmereplies,\n              children: \"Show Replies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Replies, {\n              replies: this.state.replies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/Issue.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NewTask","NewIssue","Replies","Issue","Component","constructor","props","getmereplies","e","sessionStorage","getItem","get","then","post","id","target","response","replies","data","setState","catch","error","console","log","state","issues","issueID","fetchIssues","componentDidMount","render","map","user","name","title","issue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nexport default class Issue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            replies:[],\n            issueID:null\n        };\n    }\n\n\n    fetchIssues() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.get('/api/issues')\n                .then(response => {\n                    const issues = response.data;\n                    this.setState({ issues: issues });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n   \n\n    componentDidMount() {\n\n        this.fetchIssues();\n       \n    }\n    getmereplies=(e)=>{\n        // e.preventDefault();\n        // this.setState({\n        //     issueID:e.target.id\n        // })\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies',{id:e.target.id})\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n        console.log(e.target.id)\n    }\n\n    render() {\n        console.log(this.state.replies,\"replies\");\n        return (<>\n\n            <div><NewIssue /></div>\n            <div classsName=\"row\">\n                {this.state.issues.map((issues) => {\n                    return (<div className=\"shadow\" >\n                    <div><h3>{issues.user.name}:</h3></div>\n                       <div><h3>{issues.title}</h3></div>\n                       <div><p>{issues.issue}</p></div>\n                       <button id={issues.id} onClick={this.getmereplies}>Show Replies</button>\n                       \n                       {/* <div>{issues.reply.map((replies)=>{return(<><div>{replies.user_reply.name}</div><div>{replies.reply}</div></>);})}</div> */}\n                 <Replies replies={this.state.replies} />\n                 </div>  );\n\n                 \n                })}\n\n            </div>\n        </>\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}