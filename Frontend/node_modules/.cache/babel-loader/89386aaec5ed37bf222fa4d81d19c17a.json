{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/EmpTask.js\";\nimport React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport NewTask from \"./NewTask\";\nexport default class EmpTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (event, id) => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      this.setStatus(value, id);\n      this.fetchTasks();\n      this.props.onToggleStatus();\n    };\n\n    this.state = {\n      tasks: [],\n      status: false\n    };\n  }\n\n  fetchTasks() {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() => apiClient.post(\"/api/employeeTasks\", {\n        milestoneID: this.props.id\n      }).then(response => {\n        const tasks = response.data;\n        this.setState({\n          tasks: tasks\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  setStatus(stat, taskID) {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() => apiClient.post(\"/api/setStatus\", {\n        status: stat,\n        id: taskID,\n        milestoneID: this.props.id,\n        projectID: this.props.pId\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"row\",\n      style: {\n        overflow: \"auto\",\n        height: \"80px\"\n      },\n      children: this.state.tasks.map(tasks => {\n        let done = \"card border-left-secondary shadow h-100 py-2\";\n\n        if (tasks.status) {\n          done = \"card border-left-primary shadow h-100 py-2\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: done,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row no-gutters align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\",\n                  children: tasks.taskName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\",\n                  children: tasks.percentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"status\",\n                    type: \"checkbox\",\n                    checked: tasks.status,\n                    onChange: e => {\n                      this.handleInputChange(e, tasks.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/EmpTask.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NewTask","EmpTask","Component","constructor","props","handleInputChange","event","id","target","value","type","checked","setStatus","fetchTasks","onToggleStatus","state","tasks","status","sessionStorage","getItem","get","then","post","milestoneID","response","data","setState","catch","error","console","stat","taskID","projectID","pId","componentDidMount","render","overflow","height","map","done","taskName","percentage","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport NewTask from \"./NewTask\";\n\nexport default class EmpTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      status: false,\n    };\n  }\n\n  fetchTasks() {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() =>\n        apiClient\n          .post(\"/api/employeeTasks\", { milestoneID: this.props.id })\n          .then((response) => {\n            const tasks = response.data;\n            this.setState({ tasks: tasks });\n          })\n          .catch((error) => console.error(error))\n      );\n    }\n  }\n\n  setStatus(stat, taskID) {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() =>\n        apiClient\n          .post(\"/api/setStatus\", {\n            status: stat,\n            id: taskID,\n            milestoneID: this.props.id,\n            projectID: this.props.pId,\n          })\n\n          .catch((error) => console.error(error))\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  handleInputChange = (event, id) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setStatus(value, id);\n    this.fetchTasks();\n   \n    this.props.onToggleStatus();\n  };\n\n  render() {\n    return (\n      <div classsName=\"row\"  style={{overflow:\"auto\",height:\"80px\"}}>\n        {this.state.tasks.map((tasks) => { let done=\"card border-left-secondary shadow h-100 py-2\"\n        if(tasks.status){ done=\"card border-left-primary shadow h-100 py-2\"}\n          return (\n            <div className=\"col\">\n              <div className={done}>\n                <div className=\"card-body\">\n                  <div className=\"row no-gutters align-items-center\">\n                   \n                    <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\">\n                      {tasks.taskName}\n                    </div>\n                   \n                    <div className=\"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\">\n                      {tasks.percentage}\n                    </div>\n                    <div className=\"col mr-2\">\n                      <input\n                        name=\"status\"\n                        type=\"checkbox\"\n                        checked={tasks.status}\n                        onChange={(e) => {\n                          this.handleInputChange(e, tasks.id);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}