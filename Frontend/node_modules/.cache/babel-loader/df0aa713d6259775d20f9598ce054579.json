{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/IssueDetails.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Redirect, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nexport default class IssueDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteIssue = id => {\n      confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this issue?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/deleteIssue', {\n              issue_id: id\n            }));\n            this.props.history.push('/adminView');\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    this.deleteReply = id => {\n      confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this reply?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/deleteReply', {\n              reply_id: id\n            }));\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    this.state = {\n      issues: [],\n      replies: []\n    };\n  }\n\n  fetchIssues() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', {\n        id: this.props.id\n      }).then(response => {\n        const issues = response.data;\n        this.setState({\n          issues: issues\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  fetchReplies() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', {\n        id: this.props.id\n      }).then(response => {\n        const replies = response.data;\n        this.setState({\n          replies: replies\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n    this.fetchReplies();\n  }\n\n  render() {\n    console.log(this.state.issues, \"anything\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/adminView\",\n        children: \"Back To Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), this.state.issues.map(issues => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: issues.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.deleteIssue(issues.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: issues.issue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NewReply, {\n                id: issues.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), this.state.replies.map(replies => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: replies.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: replies.reply\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 77\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.deleteReply(replies.id),\n                    children: \"Delete Reply\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 99\n                  }, this)]\n                }, replies.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 26\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/IssueDetails.js"],"names":["React","apiClient","BrowserRouter","Router","Redirect","Route","Link","NavLink","NewReply","NewIssue","Replies","confirmAlert","IssueDetails","Component","constructor","props","deleteIssue","id","title","message","buttons","label","onClick","get","then","post","issue_id","history","push","deleteReply","reply_id","state","issues","replies","fetchIssues","sessionStorage","getItem","response","data","setState","catch","error","console","fetchReplies","componentDidMount","render","log","map","issue","user","name","reply"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router,Redirect, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\n\nexport default class IssueDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            replies: [],\n        };\n    }\n\n    fetchIssues() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', { id: this.props.id })\n                .then(response => {\n                    const issues = response.data;\n                    this.setState({ issues: issues });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    fetchReplies() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', { id: this.props.id })\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.fetchIssues();\n        this.fetchReplies();\n    }\ndeleteIssue=(id)=>{\n\n    confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this issue?',\n        buttons: [\n          {\n            label: 'Yes', onClick:()=>{apiClient.get('sanctum/csrf-cookie')\n            .then(() => apiClient.post('/api/deleteIssue',{issue_id:id}));\n                        \n                         this.props.history.push('/adminView')\n                        }\n          },\n          {\n            label: 'No'\n          }\n        ]\n      })\n}\n\ndeleteReply=(id)=>{\n\n    confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this reply?',\n        buttons: [\n          {\n            label: 'Yes', onClick:()=>{apiClient.get('sanctum/csrf-cookie')\n            .then(() => apiClient.post('/api/deleteReply',{reply_id:id}));\n                        \n                        \n                        }\n          },\n          {\n            label: 'No'\n          }\n        ]\n      })\n}\n\n\n\n    render() {\nconsole.log(this.state.issues,\"anything\");\n        return (<>\n        <NavLink to=\"/adminView\">Back To Home</NavLink>\n        \n        {this.state.issues.map((issues)=>{return(\n            <>\n             <div><h3>{issues.title}</h3></div>\n            <div> <div className=\"shadow\" >\n<button onClick={()=>{this.deleteIssue(issues.id)}}>Delete</button>\n                {/* <div><h3>{this.state.issues.user.name}:</h3></div> */}\n               \n                <div><p>{issues.issue}</p></div> \n                <NewReply id={issues.id}/>\n                {this.state.replies.map((replies) => {\n                    return(\n                         <div key={replies.id}> <h3>{replies.user.name}</h3><p>{replies.reply}</p><button onClick={()=>this.deleteReply(replies.id)}>Delete Reply</button></div> )})}</div>\n            </div></>)})}\n\n        </>\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}