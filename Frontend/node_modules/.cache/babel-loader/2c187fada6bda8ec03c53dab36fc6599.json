{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/IssueDetails.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\nexport default class IssueDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteIssue = () => {\n      confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this issue?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/deleteIssue', {\n              issue_id: id\n            }));\n            this.props.onDeleteMilestone();\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    };\n\n    this.state = {\n      issues: [],\n      replies: []\n    };\n  }\n\n  fetchIssues() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', {\n        id: this.props.id\n      }).then(response => {\n        const issues = response.data;\n        this.setState({\n          issues: issues\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  fetchReplies() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', {\n        id: this.props.id\n      }).then(response => {\n        const replies = response.data;\n        this.setState({\n          replies: replies\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n    this.fetchReplies();\n  }\n\n  render() {\n    console.log(this.state.issues, \"anything\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/adminView\",\n        children: \"Back To Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), this.state.issues.map(issues => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.deleteIssue(issues.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: issues.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: issues.issue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NewReply, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), this.state.replies.map(replies => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: replies.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: replies.reply\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 77\n                }, this)]\n              }, replies.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/IssueDetails.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NavLink","NewReply","NewIssue","Replies","IssueDetails","Component","constructor","props","deleteIssue","confirmAlert","title","message","buttons","label","onClick","get","then","post","issue_id","id","onDeleteMilestone","state","issues","replies","fetchIssues","sessionStorage","getItem","response","data","setState","catch","error","console","fetchReplies","componentDidMount","render","log","map","issue","user","name","reply"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport NewReply from './NewReply';\nimport NewIssue from './NewIssue';\nimport Replies from './Replies';\n\nexport default class IssueDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            replies: [],\n        };\n    }\n\n    fetchIssues() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getIssueByID', { id: this.props.id })\n                .then(response => {\n                    const issues = response.data;\n                    this.setState({ issues: issues });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    fetchReplies() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies', { id: this.props.id })\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.fetchIssues();\n        this.fetchReplies();\n    }\ndeleteIssue=()=>{\n\n    confirmAlert({\n        title: 'Confirm to submit',\n        message: 'Are you sure you want to delete this issue?',\n        buttons: [\n          {\n            label: 'Yes', onClick:()=>{apiClient.get('sanctum/csrf-cookie')\n            .then(() => apiClient.post('/api/deleteIssue',{issue_id:id}));\n                               \n                       this.props.onDeleteMilestone(); }\n          },\n          {\n            label: 'No'\n          }\n        ]\n      })\n}\n\n\n\n    render() {\nconsole.log(this.state.issues,\"anything\");\n        return (<>\n        <NavLink to=\"/adminView\">Back To Home</NavLink>\n        \n        {this.state.issues.map((issues)=>{return(\n            <div> <div className=\"shadow\" >\n<button onClick={this.deleteIssue(issues.id)}></button>\n                {/* <div><h3>{this.state.issues.user.name}:</h3></div> */}\n                <div><h3>{issues.title}</h3></div>\n                <div><p>{issues.issue}</p></div> \n                <NewReply/>\n                {this.state.replies.map((replies) => {\n                    return(\n                         <div key={replies.id}> <h3>{replies.user.name}</h3><p>{replies.reply}</p></div> )})}</div>\n            </div>)})}\n\n        </>\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}