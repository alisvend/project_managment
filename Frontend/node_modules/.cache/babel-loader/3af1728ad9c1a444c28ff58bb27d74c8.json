{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/EmpTask.js\";\nimport React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nexport default class EmpTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = (event, id) => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setStatus(value, id);\n      this.fetchTasks();\n      this.props.onToggleStatus; // this.props.toggleStatus();\n    };\n\n    this.state = {\n      tasks: [],\n      status: false\n    };\n  }\n\n  fetchTasks() {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/employeeTasks', {\n        milestoneID: this.props.id\n      }).then(response => {\n        const tasks = response.data;\n        this.setState({\n          tasks: tasks\n        });\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  setStatus(stat, taskID) {\n    if (sessionStorage.getItem('loggedIn')) {\n      apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/setStatus', {\n        status: stat,\n        id: taskID,\n        milestoneID: this.props.id,\n        projectID: this.props.pId\n      }).catch(error => console.error(error)));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"row\",\n      children: this.state.tasks.map(tasks => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-left-primary shadow h-100 py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row no-gutters align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\",\n                  children: [\" \", tasks.taskName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\",\n                  children: [\" \", tasks.percentage]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col mr-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"status\",\n                    type: \"checkbox\",\n                    checked: tasks.status,\n                    onChange: e => {\n                      this.handleInputChange(e, tasks.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/EmpTask.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","NewTask","EmpTask","Component","constructor","props","handleInputChange","event","id","target","value","type","checked","setStatus","fetchTasks","onToggleStatus","state","tasks","status","sessionStorage","getItem","get","then","post","milestoneID","response","data","setState","catch","error","console","stat","taskID","projectID","pId","componentDidMount","render","map","taskName","percentage","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\n\n\nexport default class EmpTask extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            status:false,\n        };\n    }\n\n\n\n    fetchTasks() {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/employeeTasks', { milestoneID: this.props.id })\n                .then(response => {\n                    const tasks = response.data;\n                    this.setState({ tasks: tasks });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n\n    setStatus(stat,taskID){\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/setStatus', {\n                 status: stat,\n                  id:taskID,\n                   milestoneID:this.props.id,\n                projectID:this.props.pId })\n                \n                .catch(error => console.error(error)\n                ))\n\n        }\n\n\n\n    }\n\n    componentDidMount() {\n        this.fetchTasks();\n        \n    }\n\n    handleInputChange=(event,id)=> {\n        \n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        this.setStatus(value,id);\n        this.fetchTasks();\n        this.props.onToggleStatus;\n       // this.props.toggleStatus();\n\n      }\n\n\n    render() {\n\n        return (\n            <div classsName=\"row\">\n                {this.state.tasks.map((tasks) => {\n                    return (\n                        <div className=\"col\">\n                            <div className=\"card border-left-primary shadow h-100 py-2\">\n                                <div className=\"card-body\">\n                                    <div className=\"row no-gutters align-items-center\" >\n                                        {/* <div className=\"col mr-2\"> */}\n                                        <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.taskName}</div>\n                                        {/* <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.employee.name}</div> */}\n                                        <div className=\"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.percentage}</div>\n                                        <div className=\"col mr-2\">\n                                        <input\n            name=\"status\"\n            type=\"checkbox\"\n            checked={tasks.status}\n            onChange={(e)=>{this.handleInputChange(e,tasks.id)} }/>\n                                        </div>\n                                    </div> </div></div>\n                        </div>\n                    )\n                })}\n\n                \n            </div>\n\n\n\n        )\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}