{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ali/project_managment/Frontend/src/components/EmpProject.js\";\nimport React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EmpTask from \"./EmpTask\";\nimport NewMilestone from \"./NewMilestone\";\nimport Projects from \"./Projects\";\nexport default class EmpProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleStatus = () => {\n      this.props.onToggleStat();\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    let status = \"\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped tableLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.props.projects.map(project => {\n              if (project.id == this.props.projectID) {\n                if (project.status == 0) {\n                  status = \"In Progress\";\n                } else {\n                  status = \"Finished\";\n                }\n\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: project.projectName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: project.deadline\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"thead-dark\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Milestones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"center\"\n              },\n              colSpan: \"2\",\n              children: \"Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), this.props.milestone.map(milestones => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: milestones.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  height: \"80px\"\n                },\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(EmpTask, {\n                  onToggleStatus: this.handleToggleStatus,\n                  id: milestones.id,\n                  pId: this.props.projectID\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, milestones.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/home/ali/project_managment/Frontend/src/components/EmpProject.js"],"names":["React","apiClient","BrowserRouter","Router","Route","Link","EmpTask","NewMilestone","Projects","EmpProject","Component","constructor","props","handleToggleStatus","onToggleStat","state","render","status","projects","map","project","id","projectID","projectName","deadline","textAlign","milestone","milestones","name","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EmpTask from \"./EmpTask\";\nimport NewMilestone from \"./NewMilestone\";\nimport Projects from \"./Projects\";\n\nexport default class EmpProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleToggleStatus = () => {\n    this.props.onToggleStat();\n  };\n\n  render() {\n    let status = \"\";\n\n    return (\n      <>\n        <table className=\"table table-striped tableLeft\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th>Project Name</th>\n              <th>Deadline</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"\">\n\n            <tr>\n              {this.props.projects.map((project) => {\n                if (project.id == this.props.projectID) {\n                  if (project.status == 0) {\n                    status = \"In Progress\";\n                  } else {\n                    status = \"Finished\";\n                  }\n\n                  return (\n                    <>\n                      <th>{project.projectName}</th>\n                      <th>{project.deadline}</th>\n                      <th>{status}</th>\n                    </>\n                  );\n                }\n              })}\n            </tr>\n\n            <tr className=\"thead-dark\">\n              <th>Milestones</th>\n              <th style={{ textAlign: \"center\" }} colSpan=\"2\">\n                Tasks\n              </th>\n            </tr>\n\n            {this.props.milestone.map((milestones) => {\n              return (\n\n                <tr key={milestones.id}>\n                  <td>{milestones.name}</td>\n                  <td style={{height:\"80px\"}} colSpan=\"2\">\n                    <EmpTask\n                      onToggleStatus={this.handleToggleStatus}\n                      id={milestones.id}\n                      pId={this.props.projectID}\n                    />\n                  </td>\n                </tr>\n                \n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}