[{"/home/user/project_managment/Frontend/src/index.js":"1","/home/user/project_managment/Frontend/src/reportWebVitals.js":"2","/home/user/project_managment/Frontend/src/App.js":"3","/home/user/project_managment/Frontend/src/components/login.js":"4","/home/user/project_managment/Frontend/src/components/Register.js":"5","/home/user/project_managment/Frontend/src/components/ShowIssue.js":"6","/home/user/project_managment/Frontend/src/components/Sidebar.js":"7","/home/user/project_managment/Frontend/src/components/EmpSidebar.js":"8","/home/user/project_managment/Frontend/src/components/Projects.js":"9","/home/user/project_managment/Frontend/src/components/EmployeeForm.js":"10","/home/user/project_managment/Frontend/src/components/NewProject.js":"11","/home/user/project_managment/Frontend/src/services/api.js":"12","/home/user/project_managment/Frontend/src/components/Task.js":"13","/home/user/project_managment/Frontend/src/components/Project.js":"14","/home/user/project_managment/Frontend/src/components/Issue.js":"15","/home/user/project_managment/Frontend/src/components/IssueDetails.js":"16","/home/user/project_managment/Frontend/src/components/EmpProjects.js":"17","/home/user/project_managment/Frontend/src/components/EmpProject.js":"18","/home/user/project_managment/Frontend/src/components/Replies.js":"19","/home/user/project_managment/Frontend/src/components/NewMilestone.js":"20","/home/user/project_managment/Frontend/src/components/NewReply.js":"21","/home/user/project_managment/Frontend/src/components/NewTask.js":"22","/home/user/project_managment/Frontend/src/components/NewIssue.js":"23","/home/user/project_managment/Frontend/src/components/EmpTask.js":"24","/home/user/project_managment/Frontend/src/components/EmployeeList.js":"25"},{"size":503,"mtime":1606387322332,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1606327953194,"results":"28","hashOfConfig":"27"},{"size":2650,"mtime":1606648149393,"results":"29","hashOfConfig":"27"},{"size":4899,"mtime":1606517019227,"results":"30","hashOfConfig":"27"},{"size":5857,"mtime":1606648149393,"results":"31","hashOfConfig":"27"},{"size":7171,"mtime":1606690923494,"results":"32","hashOfConfig":"27"},{"size":11918,"mtime":1606692431715,"results":"33","hashOfConfig":"27"},{"size":7945,"mtime":1606694574209,"results":"34","hashOfConfig":"27"},{"size":1093,"mtime":1606667474529,"results":"35","hashOfConfig":"27"},{"size":3162,"mtime":1606691793651,"results":"36","hashOfConfig":"27"},{"size":3813,"mtime":1606668080747,"results":"37","hashOfConfig":"27"},{"size":162,"mtime":1606327953194,"results":"38","hashOfConfig":"27"},{"size":3771,"mtime":1606664766556,"results":"39","hashOfConfig":"27"},{"size":7408,"mtime":1606667984516,"results":"40","hashOfConfig":"27"},{"size":2706,"mtime":1606688740829,"results":"41","hashOfConfig":"27"},{"size":5053,"mtime":1606692138904,"results":"42","hashOfConfig":"27"},{"size":960,"mtime":1606670432716,"results":"43","hashOfConfig":"27"},{"size":2170,"mtime":1606672401342,"results":"44","hashOfConfig":"27"},{"size":1187,"mtime":1606648149393,"results":"45","hashOfConfig":"27"},{"size":3111,"mtime":1606668366268,"results":"46","hashOfConfig":"27"},{"size":2350,"mtime":1606689378976,"results":"47","hashOfConfig":"27"},{"size":3879,"mtime":1606668100148,"results":"48","hashOfConfig":"27"},{"size":2527,"mtime":1606687596304,"results":"49","hashOfConfig":"27"},{"size":2818,"mtime":1606684181092,"results":"50","hashOfConfig":"27"},{"size":498,"mtime":1606670212690,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"5marge",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"/home/user/project_managment/Frontend/src/index.js",[],["117","118"],"/home/user/project_managment/Frontend/src/reportWebVitals.js",[],"/home/user/project_managment/Frontend/src/App.js",["119","120","121"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\nimport Login from './components/login';\n\nimport Register from './components/Register';\nimport axios from 'axios';\nimport EmpSidebar from './components/EmpSidebar';\nimport Sidebar from './components/Sidebar';\nimport ShowIssue from './components/ShowIssue';\n\nconst App = () => {\n  const checkRole = () => {\n    const role = sessionStorage.getItem('role');\n    if (role === \"admin\") {\n      \n    }\n  };\n\n\n  const [loggedIn, setLoggedIn] = React.useState(\n    sessionStorage.getItem('loggedIn') === 'true' || false\n  );\n  const login = () => {\n    setLoggedIn(true);\n    sessionStorage.setItem('loggedIn', true);\n  };\n  const logout = () => {\n    axios.post('/logout').then(response => {\n      if (response.status === 204) {\n        setLoggedIn(false);\n        sessionStorage.setItem('loggedIn', false);\n        sessionStorage.setItem('role', null);\n      }\n    })\n  };\n  const authLink = loggedIn\n    ? <button onClick={logout} className=\"nav-link btn btn-link navSplitReg\"><h4>Logout</h4></button>\n\n    : <NavLink to='/login' className=\"nav-link navSplitLog\"><h4>Login</h4></NavLink>;\n  const regLink = loggedIn\n    ? <NavLink to='#' className=\"nav-link\"></NavLink>\n    \n    : <NavLink to='/register' className=\"nav-link navSplitReg\"><h4>Register</h4></NavLink>;\n  return (\n    \n    <Router>\n    \n     \n      <>\n        <Switch>\n\n        <Route exact path='/' render={props => (\n            <Login {...props} login={login} />\n          )} />\n          <Route path='/login' render={props => (\n            <Login {...props} login={login} />\n          )} />\n          <Route path='/register' render={props => (\n            <Register {...props} login={login} />\n          )} />\n          <Route path='/adminView' render={props => (\n            <Sidebar {...props} login={login}/>\n          \n          )} />\n           <Route path='/employeeView' render={props => (\n          <EmpSidebar {...props} login={login} />\n           \n          )} />\n\n          <Route path='/ShowIssue' render={props => (\n            <ShowIssue {...props} login={login} />\n          )} />\n          {/* <Route path='/categories' render={props => (\n            <Categories {...props} loggedIn={loggedIn} />\n          )} />\n          \n          <Route path='/CategoryForm' render={props => (\n            <CategoryForm {...props} loggedIn={loggedIn} />\n          )} />\n          <Route path='/editExpense' render={props => (\n            <EditForm {...props} loggedIn={loggedIn} />\n          )} /> */}\n        </Switch>\n      </>\n    </Router>\n  );\n};\n\nexport default App;\n","/home/user/project_managment/Frontend/src/components/login.js",["122"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Login = (props) => {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [toHome, setToHome] = React.useState(false);\n    const [role, setRole] = React.useState('');\n    const [authError, setAuthError] = React.useState(false);\n    const [unknownError, setUnknownError] = React.useState(false);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setAuthError(false);\n        setUnknownError(false);\n        axios.get('/sanctum/csrf-cookie')\n            .then(response => {\n                axios.post('/login', {\n                    email: email,\n                    password: password\n                }).then(response => {\n\n                    if (response.status === 204) {\n                        props.login();\n                        setToHome(true);\n\n                        axios.get('api/user').then(response => {\n                            sessionStorage.setItem('role', response.data.role);\n                            setRole(response.data.role);\n                            sessionStorage.setItem('userId', response.data.id);\n                            sessionStorage.setItem('username', response.data.name);\n                        });\n                    }\n                }).catch(error => {\n                    if (error.response && error.response.status === 422) {\n                        setAuthError(true);\n                    } else {\n                        setUnknownError(true);\n                        console.error(error);\n                    }\n                });\n            });\n\n    }\n\n    const createAccount=()=>{\n        \n            props.history.push('/register');\n        \n    }\n    \n    if (toHome === true) {\n\n        if (role === 'admin') {\n            return <Redirect to='/adminView' />\n        }else if(role === 'employee'){\n            return <Redirect to='/employeeView' />\n\n        }\n    }\n    return (\n      \n    <div className=\"container\">\n\n        <div className=\"row justify-content-center\">\n\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\n\n                <div className=\"card o-hidden border-0 shadow-lg my-5\">\n                    <div className=\"card-body p-0\">\n                        \n                        <div className=\"row\">\n                            <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                            <div className=\"col-lg-6\">\n                                <div className=\"p-5\">\n                                    <div className=\"text-center\">\n                                        <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                                    </div>\n                                    <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                {authError ? <div className=\"alert alert-danger\">Credentials not recognised. Please try again.</div> : null}\n                {unknownError ? <div className=\"alert alert-danger\">There was an error submitting your details.</div> : null}\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            </form>\n                                    <hr></hr>\n                                    <div className=\"text-center\">\n                                        <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                                    </div>\n                                    <div className=\"text-center\">\n                                        <a className=\"small\" onClick={createAccount}>Create an Account!</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n       \n    );\n};\n\nexport default Login;","/home/user/project_managment/Frontend/src/components/Register.js",["123"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Register= (props) => {\n    const [name, setName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [password_confirmation, setConfirmPassword] = React.useState('');\n    const [toHome, setToHome] = React.useState(false);\n    const [authError, setAuthError] = React.useState(false);\n    const [unknownError, setUnknownError] = React.useState(false);\n    const [token, setToken] = React.useState('');\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setAuthError(false);\n        setUnknownError(false);\n        axios.get('/sanctum/csrf-cookie')\n        .then(response => {\n            axios.post('/register', {\n                name: name,\n                email: email,\n                password: password,\n                password_confirmation:password_confirmation,\n                role: 'admin',\n                manager_id:null,\n                token:token,\n            }).then(response=>{ if (response.status === 201) {\n                            props.login();\n                            setToHome(true);\n                            sessionStorage.setItem('loggedIn', true);\n                axios.get('api/user', {}).then(response => {\n                    sessionStorage.setItem('role', response.data.role);\n                    sessionStorage.setItem('userId', response.data.id);\n                });\n                        }});\n        });\n\n       \n    \n    }\n    if (toHome === true) {\n        return <Redirect to='/adminView' />\n    }\n    const loginToaccount=()=>{\n        props.history.push('/login');\n    }\n    \n    return (\n        <div className=\"container\">\n\n        <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n                \n                <div className=\"row\">\n                    <div className=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\n                    <div className=\"col-lg-7\">\n                        <div className=\"p-5\">\n                            <div className=\"text-center\">\n                                <h1 className=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\n                            </div>\n                            <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                    <input\n                        \n                        type=\"text\"\n                        name=\"name\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        \n                        type=\"email\"\n                        name=\"email\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        name=\"password_confirmation\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"Password\"\n                        value={password_confirmation}\n                        onChange={e => setConfirmPassword(e.target.value)}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <input\n                        \n                        type=\"password\"\n                        name=\"name\"\n                        className={\"form-control\" + (authError || unknownError ? ' is-invalid' : '')}\n                        placeholder=\"token\"\n                        value={token}\n                        onChange={e => setToken(e.target.value)}\n                        required\n                    />\n                </div>\n\n                \n                {authError ? <div className=\"alert alert-danger\">Credentials not recognised. Please try again.</div> : null}\n                {unknownError ? <div className=\"alert alert-danger\">There was an error submitting your details.</div> : null}\n                <button type=\"submit\" className=\"btn btn-primary\">Register</button>  \n            </form>\n                            <hr></hr>\n                            <div className=\"text-center\">\n                                <a className=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                            </div>\n                            <div className=\"text-center\">\n                                <a className=\"small\" onClick={loginToaccount}>Already have an account? Login!</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n       </div>\n    );\n};\n\nexport default Register;","/home/user/project_managment/Frontend/src/components/ShowIssue.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"/home/user/project_managment/Frontend/src/components/Sidebar.js",["141","142","143","144","145","146","147","148"],"/home/user/project_managment/Frontend/src/components/EmpSidebar.js",["149","150","151","152","153","154","155","156"],"/home/user/project_managment/Frontend/src/components/Projects.js",["157","158"],"import React from 'react';\nimport apiClient from '../services/api';\n\nconst Projects = (props) => {\n\n    const projectList = props.projects.map((project) =>\n        <option value={project.id} key={project.id} >{project.projectName}</option>\n\n    );\n    if (props.loggedIn) {\n        if (props.val === null) {\n            return (\n                \n                <select value={null} placeholder=\"Show Projects\" selected className=\"custom-select2\" onChange={(e) => { props.onChangeProjId(e.target.value) }} >\n                    <option value={null}selected hidden>Show Projects</option>{projectList}\n                </select>\n        \n            );\n        }else{ return(\n            <select className=\"custom-select\" placeholder=\"Show Projects\" className=\"custom-select2\" onChange={(e) => { props.onChangeProjId(e.target.value) }} >\n                    <option value={null} hidden>Show Projects</option>{projectList}\n                </select>\n        )\n        }\n    }\n    return (\n        <div className=\"alert alert-warning\">You are not logged in.</div>\n    );\n};\n\nexport default Projects;","/home/user/project_managment/Frontend/src/components/EmployeeForm.js",["159","160"],"/home/user/project_managment/Frontend/src/components/NewProject.js",["161"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport apiClient from '../services/api';\nexport default function FormDialog(props) {\n    const [open, setOpen] = React.useState(false);\n    const [projectName, setName] = React.useState();\n    const [deadline, setDeadline] = React.useState();\n\n    const addProject = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/addProject',\n                    {\n                        projectName: projectName,\n                        deadline: deadline\n                    })\n               \n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n      setName(null);\n      setDeadline(null);\n  };\n  const handleSubmit = () => {\n      setOpen(false);\n      addProject();\n      props.onAddProj();\n      \n  };\n  return (\n      <div>\n           <a className=\"nav-link collapsed\" onClick={handleClickOpen} data-toggle=\"collapse\" data-target=\"#collapseUtilities\"\n                                aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\n                                <i className=\"\"></i>\n                                <span> New Project</span>\n                            </a>\n                            <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\"\n                                data-parent=\"#accordionSidebar\">\n                                <div className=\"bg-white py-2 collapse-inner rounded\">\n                                    <h6 className=\"collapse-header\">Custom Utilities:</h6>\n                                    <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\n                                    <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\n                                    <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\n                                    <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\n                                </div>\n                            </div>\n      {/* <Button  onClick={handleClickOpen}>\n        New Project\n      </Button> */}\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n                     Start managing your project effectively\n          </DialogContentText>\n                  <TextField\n                      onChange={(e)=>setName(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Project Name\"\n            type=\"text\"\n            fullWidth\n          />\n                  <TextField\n                      onChange={(e)=>setDeadline(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Deadline\"\n            type=\"date\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/home/user/project_managment/Frontend/src/services/api.js",[],"/home/user/project_managment/Frontend/src/components/Task.js",["162","163","164"],"import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\n\n\nexport default class Task extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks:[],\n        };\n    }\n\n    \n\n            fetchTasks() {\n                if (sessionStorage.getItem('loggedIn')) {\n                    apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/tasks',{milestoneID:this.props.id})\n                        .then(response => {\n                            const tasks = response.data;\n                            this.setState({ tasks: tasks });\n                            \n                        })\n                        .catch(error => console.error(error)\n                        ))\n        \n                }\n            }\n\n            componentDidMount(){\n             this.fetchTasks();  \n            }\nhandleDeleteTask=(id)=>{\n    apiClient.get('sanctum/csrf-cookie')\n    .then(() => apiClient.post('/api/deleteTask',{taskId:id,milestoneID:this.props.id,projectID:this.props.projectID}));\n    console.log(this.props.id,\"propsID\");           \n          this.fetchTasks();  \n          this.props.onDeleteTask();         \n        \n                \n}\n\nhandleAddTask=()=>{\n\nthis.fetchTasks();\nthis.props.onAddTask();\n\n}\n\n    render(){\n      \n        return(<>\n<div   classsName=\"row\"  style={{overflow:\"auto\",height:\"80px\"}} >\n{this.state.tasks.map((tasks) => { let done=\"card border-left-secondary shadow h-100 py-2\"\n    if(tasks.status){ done=\"card border-left-primary shadow h-100 py-2\"}\n                                        return (\n                                            <div className=\"col\">\n                                                \n                                                <div className={done}>\n                                                <div className=\"card-body\">\n                                                        <div className=\"row no-gutters align-items-center\" >\n                                                            {/* <div className=\"col mr-2\"> */}\n                                                           <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.taskName}</div>\n                                                           <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.employee.name}</div>\n                                                           <div className=\"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {tasks.percentage}</div>\n                                                            <div className=\"col mr-2\">\n                                                              <div className=\"section\">  <span className=\"trash\" onClick={() => { this.handleDeleteTask(tasks.id) }}>Delete\n                                                                <span></span>\n                                                                <i></i>\n                                                                </span>\n                                                              </div>\n                                                        </div>\n                                                    </div> </div></div>\n                                           </div>\n                                              )\n                                            \n                                         }  )}\n                                        \n\n                                              \n\n\n</div>\n<NewTask projectID={this.props.projectID} id={this.props.id} onAddTask={this.handleAddTask}/>\n</>\n\n        )\n    }\n}\n\n\n","/home/user/project_managment/Frontend/src/components/Project.js",["165","166","167","168","169","170"],"import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Task from './Task';\nimport NewMilestone from \"./NewMilestone\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\nexport default class Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n\n        };\n    }\n    handleAddMile = () => {\n\n        this.props.onAddMilestone();\n    }\n\n    deleteMilestone=(id)=>{\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this milestone?',\n            buttons: [\n              {\n                label: 'Yes', onClick:()=>{apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/deleteMilestone',{milestone_id:id,projectID:this.props.projectID}));\n                                   \n                           this.props.onDeleteMilestone(); }\n              },\n              {\n                label: 'No'\n              }\n            ]\n          })\n        //window.confirm(\"Are you sure you want to delete this milestone?\")\n             \n            \n    }\n\n    handleDeleteProject=(id)=>{\n        confirmAlert({\n            title: 'Confirm to submit',\n            message: 'Are you sure you want to delete this project?',\n            buttons: [\n              {\n                label: 'Yes',onClick:()=>{ apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/deleteProject',{project_id:id}));\n                                   \n                           this.props.onDeleteProject();   }\n              },\n              {\n                label: 'No'\n              }\n            ]\n          })\n        //window.confirm(\"Are you sure you want to delete this project?\")\n       \n\n    }\n\n    handleAddTask=()=>{\n        this.handleAddMile();\n\n    }\n\n    handleDeleteTask=()=>{\n        this.handleAddMile();\n\n    }\n    render() {\n        let status = \"\";\n        return (\n            <>\n\n\n\n\n                <table className=\"table table-striped tableLeft\">\n                    <thead className='thead-dark'>\n                        <tr>\n\n                            <th>\n                                Project Name\n                                 </th>\n                            <th>\n                                Deadline\n                                        </th>\n                            <th>\n                                Status\n                                </th>\n                                <th></th>\n                        </tr>\n\n                    </thead>\n                    <tbody className=\"\">\n                        <tr>\n\n\n\n                            {this.props.projects.map((project) => {\n                                if (project.id == this.props.projectID) {\n                                   \n                                    if (project.status == 0) {\n                                        status = \"In Progress\";\n                                    } else { status = \"Finished\"; }\n\n                                    return (<>\n                                        <th>\n                                            {project.projectName} \n                                        </th>\n                                        <th>\n                                            {project.deadline}\n                                        </th>\n                                        <th>\n                                            {status} \n                                        </th>\n                                        <th><div className=\"section\">  <span className=\"trash\" onClick={(e)=>{this.handleDeleteProject(this.props.projectID)}}>Delete\n                                                                <span></span>\n                                                                <i></i>\n                                                                </span>\n                                                              </div></th></>\n                                    );\n                                }\n                            })}\n\n                                \n                        </tr>\n                        <tr className='thead-dark'>\n                        <th colSpan=\"2\"><div className=\"plus-milestone\"><p>Milestones</p><NewMilestone projectID={this.props.projectID} onAddMile={this.handleAddMile} loggedIn={true} /></div></th>\n                            \n                            <th style={{textAlign:\"left\"}} colSpan=\"2\">Tasks</th>\n                            </tr>\n                        {this.props.milestone.map((milestones) => { let done=\"card border-left-sec shadow h-100 py-2\"\n                            if(milestones.status){  done=\"card border-left-prim shadow h-100 py-2\"}\n                            return (\n                                <tr key={milestones.id}>\n                                    \n                                  \n                                    <td style={{height:\"100%\"}}colSpan=\"2\">\n                                        <div className=\"col\">\n                                                <div className={done}>\n                                                    <div className=\"card-body\">\n                                                        <div className=\"row no-gutters align-items-center\" >\n                                                            {/* <div className=\"col mr-2\"> */}\n                                                           <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {milestones.name}</div>\n                                                           <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {milestones.id}</div>\n                                                           <div className=\"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\"> {milestones.status}</div>\n                                                            <div className=\"col mr-2\">\n                                                              <div className=\"section\">  <span className=\"trash\" onClick={(e)=>{this.deleteMilestone(milestones.id)}}>Delete\n                                                                <span></span>\n                                                                <i></i>\n                                                                </span>\n                                                              </div>\n                                                            </div>\n                                                        </div> \n                                                    </div>\n                                                </div>\n                                        </div>\n                                    </td>\n                                    <td style={{height:\"80px\"}} colSpan=\"2\"><div ><Task projectID={this.props.projectID} id={milestones.id} onAddTask={this.handleAddTask} onDeleteTask={this.handleDeleteTask} /></div></td>\n\n                                </tr>\n                            )\n                        })}\n                        <tr></tr>\n                    </tbody>\n                </table>\n            </>\n\n\n\n        )\n    }\n}\n\n\n","/home/user/project_managment/Frontend/src/components/Issue.js",["171","172","173","174"],"/home/user/project_managment/Frontend/src/components/IssueDetails.js",["175","176","177","178","179","180","181"],"/home/user/project_managment/Frontend/src/components/EmpProjects.js",["182"],"import React from 'react';\nimport apiClient from '../services/api';\n\nconst EmpProjects = (props) => {\n   \n  const projectList = props.projects.map((project) => <option value={project.id} key={project.id} >{project.projectName}</option>);\n  if (props.loggedIn) {\n    if (props.val === null) {\n        return (\n                <select value={null}selected className=\"custom-select2\" onChange={(e) => { props.onChangeProjId(e.target.value) }} >\n                    <option value={null} selected hidden>Show Projects</option>{projectList}\n                </select>\n        );\n    }else{ \n        return(\n                <select className=\"custom-select2\" onChange={(e) => { props.onChangeProjId(e.target.value) }} >\n                    <option value={null} hidden>Show Projects</option>{projectList}\n                </select>\n        );\n    }\n  }\n  return (\n    <div className=\"alert alert-warning\">You are not logged in.</div>\n  );\n};\n\nexport default EmpProjects;","/home/user/project_managment/Frontend/src/components/EmpProject.js",["183","184","185","186","187","188","189","190","191"],"import React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EmpTask from \"./EmpTask\";\nimport NewMilestone from \"./NewMilestone\";\nimport Projects from \"./Projects\";\n\nexport default class EmpProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleToggleStatus = () => {\n    this.props.onToggleStat();\n  };\n\n  render() {\n    let status = \"\";\n\n    return (\n      <>\n        <table className=\"table table-striped tableLeft\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th>Project Name</th>\n              <th>Deadline</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n\n          <tbody className=\"\">\n\n            <tr>\n              {this.props.projects.map((project) => {\n                if (project.id == this.props.projectID) {\n                  if (project.status == 0) {\n                    status = \"In Progress\";\n                  } else {\n                    status = \"Finished\";\n                  }\n\n                  return (\n                    <>\n                      <th>{project.projectName}</th>\n                      <th>{project.deadline}</th>\n                      <th>{status}</th>\n                    </>\n                  );\n                }\n              })}\n            </tr>\n\n            <tr className=\"thead-dark\">\n              <th>Milestones</th>\n              <th style={{ textAlign: \"center\" }} colSpan=\"2\">\n                Tasks\n              </th>\n            </tr>\n\n            {this.props.milestone.map((milestones) => {\n              return (\n\n                <tr key={milestones.id}>\n                  <td>{milestones.name}</td>\n                  <td style={{height:\"80px\"}} colSpan=\"2\">\n                    <EmpTask\n                      onToggleStatus={this.handleToggleStatus}\n                      id={milestones.id}\n                      pId={this.props.projectID}\n                    />\n                  </td>\n                </tr>\n                \n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n","/home/user/project_managment/Frontend/src/components/Replies.js",["192","193","194","195","196"],"import React from 'react';\nimport apiClient from '../services/api';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport NewTask from './NewTask';\nimport NewIssue from './NewIssue';\n\nexport default class Replies extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issueID:null,\n           replies:[]\n        };\n    }\n    fetchReplies(id) {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie').then(() => apiClient.post('/api/getReplies',{id:id})\n                .then(response => {\n                    const replies = response.data;\n                    this.setState({ replies: replies });\n\n                })\n                .catch(error => console.error(error)\n                ))\n\n        }\n    }\n    \ncomponentDidMount(){\n    this.setState({issueID:this.props.id})\n    this.fetchReplies(this.state.issueID);\n    console.log(this.props.id);\n}\nrender(){\nconsole.log(this.props,\"props\");\nreturn(\n\n\n<div>    {this.state.replies.map((replies)=>{return (<div key={replies.id}> <h3>{replies.user.name}</h3><p>{replies.reply}</p></div>);})}</div>\n\n\n)\n\n\n\n\n}\n\n\n\n\n\n}","/home/user/project_managment/Frontend/src/components/NewMilestone.js",["197"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport apiClient from '../services/api';\nexport default function NewMilestone(props) {\n    const [open, setOpen] = React.useState(false);\n    const [milestoneName, setName] = React.useState();\n    const [deadline, setDeadline] = React.useState();\n    const [projectID, setProjectId] = React.useState(props.projectID);\n\n    const addMilestone = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/addMile',\n                    {\n                        milestoneName: milestoneName,\n                        deadline: deadline,\n                        projectID: projectID\n                    })\n\n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setName(null);\n        setDeadline(null);\n    };\n    const handleSubmit = () => {\n        setOpen(false);\n        addMilestone();\n        props.onAddMile();\n    };\n    return (\n        <div>\n\n<button onClick={handleClickOpen} className=\"plus-blue radius \" style={{color:\"gray\", marginRight: \"1em\",marginLeft: \"1em\", float: \"right\" }}>\n            </button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">New Milestone</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Start managing your project effectively\n          </DialogContentText>\n                    <TextField\n                        onChange={(e) => setName(e.target.value)}\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Milestone Name\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={(e) => setDeadline(e.target.value)}\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Deadline\"\n                        type=\"date\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","/home/user/project_managment/Frontend/src/components/NewReply.js",[],"/home/user/project_managment/Frontend/src/components/NewTask.js",["198","199","200","201"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport apiClient from '../services/api';\nimport EmployeeList from './EmployeeList';\n\nexport default function NewTask(props) {\n    const [open, setOpen] = React.useState(false);\n    const [taskName, setName] = React.useState();\n\n    const [eid, setEid] = React.useState();\n    const [employees, setEmployees] = React.useState([]);\n    const [options, setOptions] = React.useState();\n    React.useEffect(() => {\n        getEmployees();\n        console.log(employees, \"eee\");\n    }, []);\n\n    const addTask = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.post('/api/addTask',\n                    {\n                        taskName: taskName,\n\n                        milestoneID: props.id,\n                        user_id: eid,\n                        projectID:props.projectID,\n                    })\n\n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n\n    const getEmployees = () => {\n        if (sessionStorage.getItem('loggedIn')) {\n            apiClient.get('sanctum/csrf-cookie')\n                .then(() => apiClient.get('/api/getEmployees')\n\n                    .then(response => {\n                        setEmployees(response.data.data)\n                    })\n\n                    .catch(error => console.error(error)\n                    ))\n\n        }\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        getEmployees();\n        console.log(employees, \"eee\");\n\n\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setName(null);\n\n    };\n\n    const handleSubmit = () => {\n        setOpen(false);\n        addTask();\n        props.onAddTask();\n\n    };\n\n\n    return (\n        <div>\n            {/* <button  onClick={handleClickOpen()} className=\"plus radius\" style={{marginRight:\"1em\",float:\"right\"}}></button> */}\n            <button onClick={handleClickOpen} className=\"plus radius\" style={{ marginRight: \"1em\", float: \"right\" }}>\n\n            </button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">New Task</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Start managing your project effectively\n          </DialogContentText>\n\n                    <EmployeeList onChangeEmployeeId={(id) => { setEid(id) }} employees={employees} />\n\n                    {/* <Select onChange={(e)=>setEid(e.target.value)}> {employees.forEach((employee)=>{return(<option value={employee.id}>{employee.name} </option>);})}</Select>   */}\n                    <TextField\n                        onChange={(e) => setName(e.target.value)}\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Task Name\"\n                        type=\"text\"\n                        fullWidth\n                    />\n\n                    \n\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                    Submit\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","/home/user/project_managment/Frontend/src/components/NewIssue.js",[],"/home/user/project_managment/Frontend/src/components/EmpTask.js",["202","203","204","205"],"import React from \"react\";\nimport apiClient from \"../services/api\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport NewTask from \"./NewTask\";\n\nexport default class EmpTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      status: false,\n    };\n  }\n\n  fetchTasks() {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() =>\n        apiClient\n          .post(\"/api/employeeTasks\", { milestoneID: this.props.id })\n          .then((response) => {\n            const tasks = response.data;\n            this.setState({ tasks: tasks });\n          })\n          .catch((error) => console.error(error))\n      );\n    }\n  }\n\n  setStatus(stat, taskID) {\n    if (sessionStorage.getItem(\"loggedIn\")) {\n      apiClient.get(\"sanctum/csrf-cookie\").then(() =>\n        apiClient\n          .post(\"/api/setStatus\", {\n            status: stat,\n            id: taskID,\n            milestoneID: this.props.id,\n            projectID: this.props.pId,\n          })\n\n          .catch((error) => console.error(error))\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  handleInputChange = (event, id) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setStatus(value, id);\n    this.fetchTasks();\n   \n    this.props.onToggleStatus();\n  };\n\n  render() {\n    return (\n      <div classsName=\"row\"  style={{overflow:\"auto\",height:\"80px\"}}>\n        {this.state.tasks.map((tasks) => { let done=\"card border-left-secondary shadow h-100 py-2\"\n        if(tasks.status){ done=\"card border-left-primary shadow h-100 py-2\"}\n          return (\n            <div className=\"col\">\n              <div className={done}>\n                <div className=\"card-body\">\n                  <div className=\"row no-gutters align-items-center\">\n                   \n                    <div className=\"col mr-2  m-0 font-weigt-bold text-primary text-uppercase mb-2\">\n                      {tasks.taskName}\n                    </div>\n                   \n                    <div className=\"col mr-2   m-0 font-weigt-bold text-primary text-uppercase mb-2\">\n                      {tasks.percentage}\n                    </div>\n                    <div className=\"col mr-2\">\n                      <input\n                        name=\"status\"\n                        type=\"checkbox\"\n                        checked={tasks.status}\n                        onChange={(e) => {\n                          this.handleInputChange(e, tasks.id);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/home/user/project_managment/Frontend/src/components/EmployeeList.js",["206"],"import React from 'react';\nimport apiClient from '../services/api';\n\nconst EmployeeList = (props) => {\n   \n    const employees1 = props.employees.map((employee,index) =><option value={employee.id} key={employee.id} >{employee.name}</option> );\n    return (\n            <select className=\"custom-select\" onChange={(e) => { props.onChangeEmployeeId(e.target.value) }} >\n                <option value={0}>Show Employee</option>{employees1}\n            </select>\n    );\n};\n\nexport default EmployeeList;",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":18},{"ruleId":"211","severity":1,"message":"215","line":36,"column":9,"nodeType":"213","messageId":"214","endLine":36,"endColumn":17},{"ruleId":"211","severity":1,"message":"216","line":40,"column":9,"nodeType":"213","messageId":"214","endLine":40,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":111,"column":41,"nodeType":"219","endLine":111,"endColumn":86},{"ruleId":"217","severity":1,"message":"218","line":133,"column":33,"nodeType":"219","endLine":133,"endColumn":79},{"ruleId":"211","severity":1,"message":"220","line":2,"column":27,"nodeType":"213","messageId":"214","endLine":2,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":2,"column":44,"nodeType":"213","messageId":"214","endLine":2,"endColumn":49},{"ruleId":"211","severity":1,"message":"222","line":2,"column":51,"nodeType":"213","messageId":"214","endLine":2,"endColumn":55},{"ruleId":"211","severity":1,"message":"223","line":2,"column":57,"nodeType":"213","messageId":"214","endLine":2,"endColumn":64},{"ruleId":"211","severity":1,"message":"224","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"225","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"226","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":18},{"ruleId":"211","severity":1,"message":"227","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":19},{"ruleId":"211","severity":1,"message":"228","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"211","severity":1,"message":"229","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":12},{"ruleId":"211","severity":1,"message":"230","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":19},{"ruleId":"211","severity":1,"message":"231","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":136,"column":17,"nodeType":"219","endLine":136,"endColumn":52},{"ruleId":"217","severity":1,"message":"218","line":144,"column":15,"nodeType":"219","endLine":150,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":167,"column":15,"nodeType":"219","endLine":167,"endColumn":61},{"ruleId":"217","severity":1,"message":"218","line":199,"column":21,"nodeType":"219","endLine":201,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":203,"column":45,"nodeType":"219","endLine":204,"endColumn":73},{"ruleId":"211","severity":1,"message":"229","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":12},{"ruleId":"217","severity":1,"message":"234","line":148,"column":29,"nodeType":"219","endLine":149,"endColumn":82},{"ruleId":"217","severity":1,"message":"218","line":157,"column":29,"nodeType":"219","endLine":158,"endColumn":82},{"ruleId":"217","severity":1,"message":"218","line":179,"column":29,"nodeType":"219","endLine":180,"endColumn":84},{"ruleId":"217","severity":1,"message":"218","line":196,"column":29,"nodeType":"219","endLine":196,"endColumn":75},{"ruleId":"217","severity":1,"message":"234","line":243,"column":41,"nodeType":"219","endLine":244,"endColumn":111},{"ruleId":"217","severity":1,"message":"218","line":275,"column":41,"nodeType":"219","endLine":275,"endColumn":82},{"ruleId":"232","severity":1,"message":"233","line":277,"column":45,"nodeType":"219","endLine":278,"endColumn":73},{"ruleId":"211","severity":1,"message":"224","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"225","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"229","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":172,"column":15,"nodeType":"219","endLine":175,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":188,"column":15,"nodeType":"219","endLine":195,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":212,"column":15,"nodeType":"219","endLine":212,"endColumn":61},{"ruleId":"217","severity":1,"message":"218","line":244,"column":21,"nodeType":"219","endLine":246,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":248,"column":45,"nodeType":"219","endLine":249,"endColumn":73},{"ruleId":"211","severity":1,"message":"235","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":20,"column":75,"nodeType":"238","endLine":20,"endColumn":101},{"ruleId":"211","severity":1,"message":"239","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"240","line":11,"column":21,"nodeType":"213","messageId":"214","endLine":11,"endColumn":33},{"ruleId":"217","severity":1,"message":"218","line":46,"column":12,"nodeType":"219","endLine":47,"endColumn":88},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"222","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"222","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"241","severity":1,"message":"242","line":102,"column":64,"nodeType":"243","messageId":"244","endLine":102,"endColumn":66},{"ruleId":"245","severity":1,"message":"246","line":103,"column":48,"nodeType":"247","messageId":"248","endLine":103,"endColumn":50},{"ruleId":"245","severity":1,"message":"246","line":105,"column":56,"nodeType":"247","messageId":"248","endLine":105,"endColumn":58},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"249","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":67,"column":42,"nodeType":"247","messageId":"248","endLine":67,"endColumn":44},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"239","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":43},{"ruleId":"211","severity":1,"message":"221","line":3,"column":45,"nodeType":"213","messageId":"214","endLine":3,"endColumn":50},{"ruleId":"211","severity":1,"message":"222","line":3,"column":52,"nodeType":"213","messageId":"214","endLine":3,"endColumn":56},{"ruleId":"211","severity":1,"message":"223","line":3,"column":58,"nodeType":"213","messageId":"214","endLine":3,"endColumn":65},{"ruleId":"211","severity":1,"message":"250","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"251","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":15},{"ruleId":"211","severity":1,"message":"235","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"235","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"222","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"252","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":20},{"ruleId":"211","severity":1,"message":"224","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":35,"column":50,"nodeType":"243","messageId":"244","endLine":35,"endColumn":52},{"ruleId":"245","severity":1,"message":"246","line":36,"column":32,"nodeType":"247","messageId":"248","endLine":36,"endColumn":34},{"ruleId":"245","severity":1,"message":"246","line":37,"column":38,"nodeType":"247","messageId":"248","endLine":37,"endColumn":40},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"222","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"249","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"250","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"253","line":14,"column":23,"nodeType":"213","messageId":"214","endLine":14,"endColumn":35},{"ruleId":"211","severity":1,"message":"254","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":14},{"ruleId":"211","severity":1,"message":"255","line":19,"column":12,"nodeType":"213","messageId":"214","endLine":19,"endColumn":19},{"ruleId":"211","severity":1,"message":"256","line":19,"column":21,"nodeType":"213","messageId":"214","endLine":19,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":23,"column":8,"nodeType":"259","endLine":23,"endColumn":10,"suggestions":"260"},{"ruleId":"211","severity":1,"message":"220","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"221","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"222","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"249","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"235","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'checkRole' is assigned a value but never used.","Identifier","unusedVar","'authLink' is assigned a value but never used.","'regLink' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'Projects' is defined but never used.","'Project' is defined but never used.","'EmpProject' is defined but never used.","'EmpProjects' is defined but never used.","'Issue' is defined but never used.","'Task' is defined but never used.","'EmpRegister' is defined but never used.","'FormDialog' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'apiClient' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'setManagerId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NewTask' is defined but never used.","'NewIssue' is defined but never used.","'Replies' is defined but never used.","'NewMilestone' is defined but never used.","'setProjectId' is assigned a value but never used.","'Select' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array.","ArrayExpression",["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},"Update the dependencies array to be: [employees]",{"range":"266","text":"267"},[949,951],"[employees]"]